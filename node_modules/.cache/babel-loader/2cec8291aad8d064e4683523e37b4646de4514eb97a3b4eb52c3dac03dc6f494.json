{"ast":null,"code":"var _jsxFileName = \"/home/rosita/proyectos/nodeJS/gestortareas/src/components/NotesPage.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport NoteItem from './NoteItem';\nimport NoteForm from './NoteForm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHouse } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesPage = () => {\n  _s();\n  const [notes, setNotes] = useState([]); // Lista de notas\n  const [showNoteForm, setShowNoteForm] = useState(false);\n  const addNote = noteContent => {\n    const newNote = {\n      id: Date.now(),\n      content: noteContent,\n      expanded: false // Estará contraído por defecto\n    };\n    setNotes([...notes, newNote]);\n    setShowNoteForm(false);\n  };\n  // Cargar las notas desde localStorage cuando se monte el componente\n  useEffect(() => {\n    const savedNotes = localStorage.getItem('notes');\n    if (savedNotes) {\n      setNotes(JSON.parse(savedNotes));\n    }\n  }, []);\n\n  // Guardar las notas en localStorage cada vez que cambien\n  useEffect(() => {\n    if (notes.length > 0) {\n      localStorage.setItem('notes', JSON.stringify(notes));\n    }\n  }, [notes]);\n  const deleteNote = id => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n  const toggleNoteExpand = id => {\n    setNotes(notes.map(note => note.id === id ? {\n      ...note,\n      expanded: !note.expanded\n    } : note));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"openModalButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"homeIcon\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHouse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), \"Inicio\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Notas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowNoteForm(true),\n      children: \"A\\xF1adir Nueva Nota\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showNoteForm && /*#__PURE__*/_jsxDEV(NoteForm, {\n      onAdd: addNote,\n      onClose: () => setShowNoteForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notesList\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(NoteItem, {\n        note: note,\n        onDelete: deleteNote,\n        onToggleExpand: toggleNoteExpand\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesPage, \"hAxAzPtBRJHJJ186ULiZdGu51Yg=\");\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["Link","React","useState","NoteItem","NoteForm","FontAwesomeIcon","faHouse","jsxDEV","_jsxDEV","NotesPage","_s","notes","setNotes","showNoteForm","setShowNoteForm","addNote","noteContent","newNote","id","Date","now","content","expanded","useEffect","savedNotes","localStorage","getItem","JSON","parse","length","setItem","stringify","deleteNote","filter","note","toggleNoteExpand","map","children","to","className","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAdd","onClose","onDelete","onToggleExpand","_c","$RefreshReg$"],"sources":["/home/rosita/proyectos/nodeJS/gestortareas/src/components/NotesPage.jsx"],"sourcesContent":["\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport NoteItem from './NoteItem';\nimport NoteForm from './NoteForm';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHouse } from '@fortawesome/free-solid-svg-icons';\n\n\nconst NotesPage = () => {\n  const [notes, setNotes] = useState([]); // Lista de notas\n  const [showNoteForm, setShowNoteForm] = useState(false);\n\n  const addNote = (noteContent) => {\n    const newNote = {\n      id: Date.now(),\n      content: noteContent,\n      expanded: false, // Estará contraído por defecto\n    };\n    setNotes([...notes, newNote]);\n    setShowNoteForm(false);\n  };\n   // Cargar las notas desde localStorage cuando se monte el componente\n   useEffect(() => {\n    const savedNotes = localStorage.getItem('notes');\n    if (savedNotes) {\n      setNotes(JSON.parse(savedNotes));\n    }\n  }, []);\n\n  // Guardar las notas en localStorage cada vez que cambien\n  useEffect(() => {\n    if (notes.length > 0) {\n      localStorage.setItem('notes', JSON.stringify(notes));\n    }\n  }, [notes]);\n\n  const deleteNote = (id) => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n\n  const toggleNoteExpand = (id) => {\n    setNotes(notes.map(note => \n      note.id === id ? { ...note, expanded: !note.expanded } : note\n    ));\n  };\n\n  return (\n    <div>\n              <Link to=\"/\">\n        <button className=\"openModalButton\">\n        <span className=\"homeIcon\"><FontAwesomeIcon icon={faHouse} /></span>Inicio\n        </button>\n      </Link>\n      <h2>Lista de Notas</h2>\n      <button onClick={() => setShowNoteForm(true)}>Añadir Nueva Nota</button>\n\n      {showNoteForm && <NoteForm onAdd={addNote} onClose={() => setShowNoteForm(false)} />}\n\n      <div className=\"notesList\">\n        {notes.map(note => (\n          <NoteItem\n            key={note.id}\n            note={note}\n            onDelete={deleteNote}\n            onToggleExpand={toggleNoteExpand}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default NotesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}