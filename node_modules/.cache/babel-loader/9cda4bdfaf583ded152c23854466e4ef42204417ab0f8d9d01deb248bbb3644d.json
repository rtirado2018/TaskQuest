{"ast":null,"code":"var _jsxFileName = \"/home/rosita/proyectos/nodeJS/gestortareas/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskToDo from './components/TaskListToDo';\nimport TaskDone from './components/TaskListDone';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Cargar las tareas desde LocalStorage o establecer un arreglo vacío\n  const loadTasksFromLocalStorage = () => {\n    const tasksFromStorage = localStorage.getItem('tasks');\n    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];\n  };\n  const [tasks, setTasks] = useState(loadTasksFromLocalStorage()); // Inicializa las tareas desde LocalStorage\n  const [showModal, setShowModal] = useState(false); // Estado para mostrar el modal\n\n  // Guardar las tareas en LocalStorage cada vez que cambien\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]); // Se ejecuta cada vez que las tareas cambian\n\n  const addTask = text => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    setShowModal(false); // Cierra el modal después de añadir la tarea\n  };\n  const toggleTask = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const editTask = (id, newText) => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      text: newText\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestor de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"openModalButton\",\n      onClick: () => setShowModal(true),\n      children: \"\\u2795 A\\xF1adir Tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalOverlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          className: \"cancelButton\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A\\xF1adir Nueva Tarea:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listContainer\",\n      children: [/*#__PURE__*/_jsxDEV(TaskToDo, {\n        tasks: tasks.filter(task => !task.completed),\n        onToggle: toggleTask,\n        onDelete: deleteTask,\n        onEdit: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskDone, {\n        tasks: tasks.filter(task => task.completed),\n        onToggle: toggleTask,\n        onDelete: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Vf8oaxi/zk6iI+SvMYqcxQJf1Fg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskToDo","TaskDone","jsxDEV","_jsxDEV","App","_s","loadTasksFromLocalStorage","tasksFromStorage","localStorage","getItem","JSON","parse","tasks","setTasks","showModal","setShowModal","setItem","stringify","addTask","text","newTask","id","Date","now","completed","toggleTask","map","task","deleteTask","filter","editTask","newText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAdd","onToggle","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/home/rosita/proyectos/nodeJS/gestortareas/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskToDo from './components/TaskListToDo';\nimport TaskDone from './components/TaskListDone';\nimport './App.css';\n\n\n\nconst App = () => {\n  // Cargar las tareas desde LocalStorage o establecer un arreglo vacío\n  const loadTasksFromLocalStorage = () => {\n    const tasksFromStorage = localStorage.getItem('tasks');\n    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];\n  };\n\n  const [tasks, setTasks] = useState(loadTasksFromLocalStorage()); // Inicializa las tareas desde LocalStorage\n  const [showModal, setShowModal] = useState(false); // Estado para mostrar el modal\n\n  // Guardar las tareas en LocalStorage cada vez que cambien\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]); // Se ejecuta cada vez que las tareas cambian\n\n  const addTask = (text) => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n    setShowModal(false); // Cierra el modal después de añadir la tarea\n  };\n\n  const toggleTask = (id) => {\n    setTasks(tasks.map(task =>\n      task.id === id ? { ...task, completed: !task.completed } : task\n    ));\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const editTask = (id, newText) => {\n    setTasks(\n      tasks.map(task =>\n        task.id === id ? { ...task, text: newText } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"mainContainer\">\n      <h1>Gestor de Tareas</h1>\n      <button className=\"openModalButton\" onClick={() => setShowModal(true)}>\n        ➕ Añadir Tarea\n      </button>\n      \n        {/* MODAL */}\n        {showModal && (\n          <div className=\"modalOverlay\">\n            <div className=\"modalContent\">\n            <button onClick={() => setShowModal(false)} className=\"cancelButton\">X</button>\n              <h2>Añadir Nueva Tarea:</h2>\n              \n              <TaskForm onAdd={addTask} />\n              \n            </div>\n          </div>\n        )}\n\n        {/* TAREAS */}\n        <div className=\"listContainer\">\n          \n          <TaskToDo tasks={tasks.filter(task => !task.completed)} onToggle={toggleTask} onDelete={deleteTask}onEdit={editTask}/>\n          <TaskDone tasks={tasks.filter(task => task.completed)} onToggle={toggleTask} onDelete={deleteTask}/>\n       \n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}