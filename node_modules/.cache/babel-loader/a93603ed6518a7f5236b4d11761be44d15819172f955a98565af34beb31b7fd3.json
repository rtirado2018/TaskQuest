{"ast":null,"code":"import{Link}from'react-router-dom';import React,{useState,useEffect}from'react';import NoteItem from'./NoteItem';import NoteForm from'./NoteForm';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faHouse,faSquarePlus}from'@fortawesome/free-solid-svg-icons';import'./notesStyle.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotesPage=()=>{const[notes,setNotes]=useState([]);// Lista de notas\nconst[showNoteForm,setShowNoteForm]=useState(false);// Formulario para añadir nota\n// Cargar las notas desde localStorage cuando se monte el componente\nuseEffect(()=>{const savedNotes=localStorage.getItem('notes');if(savedNotes){setNotes(JSON.parse(savedNotes));// Cargar las notas al estado\n}},[]);// Guardar las notas en localStorage solo si las notas cambian\nuseEffect(()=>{if(notes.length>0){// Solo guardamos si hay notas\nlocalStorage.setItem('notes',JSON.stringify(notes));}},[notes]);// Se ejecuta cada vez que 'notes' cambia\n// Función para agregar una nueva nota\nconst addNote=noteContent=>{const newNote={id:Date.now(),content:noteContent,expanded:false,// Estará contraído por defecto\ndate:new Date().toISOString()// Agregar la fecha actual\n};setNotes([newNote,...notes]);// Añadir la nueva nota al inicio\nsetShowNoteForm(false);// Cerrar el formulario\n};// Función para borrar una nota\nconst deleteNote=id=>{setNotes(notes.filter(note=>note.id!==id));// Eliminar la nota por ID\n};// Función para expandir o contraer una nota\nconst toggleNoteExpand=id=>{setNotes(notes.map(note=>note.id===id?{...note,expanded:!note.expanded}:note));};const editNote=(id,newContent)=>{setNotes(notes.map(note=>note.id===id?{...note,content:newContent}:note));};return/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"homeButton\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"homeIcon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faHouse})}),\"Inicio\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"notesContainer\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Notas\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"addNoteButton\",onClick:()=>setShowNoteForm(true),children:[/*#__PURE__*/_jsx(\"span\",{className:\"addNoteIcon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSquarePlus})}),\"A\\xF1adir Nota\"]}),showNoteForm&&/*#__PURE__*/_jsx(NoteForm,{onAdd:addNote,onClose:()=>setShowNoteForm(false)}),/*#__PURE__*/_jsx(\"div\",{className:\"notesList\",children:notes.map(note=>/*#__PURE__*/_jsx(NoteItem,{note:note,onDelete:deleteNote,onToggleExpand:toggleNoteExpand,onEdit:editNote},note.id))})]})]});};export default NotesPage;","map":{"version":3,"names":["Link","React","useState","useEffect","NoteItem","NoteForm","FontAwesomeIcon","faHouse","faSquarePlus","jsx","_jsx","jsxs","_jsxs","NotesPage","notes","setNotes","showNoteForm","setShowNoteForm","savedNotes","localStorage","getItem","JSON","parse","length","setItem","stringify","addNote","noteContent","newNote","id","Date","now","content","expanded","date","toISOString","deleteNote","filter","note","toggleNoteExpand","map","editNote","newContent","className","children","to","icon","onClick","onAdd","onClose","onDelete","onToggleExpand","onEdit"],"sources":["/home/rosita/proyectos/nodeJS/gestortareas/src/components/NotesPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport NoteItem from './NoteItem';\nimport NoteForm from './NoteForm';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHouse, faSquarePlus } from '@fortawesome/free-solid-svg-icons';\n\nimport './notesStyle.css';\n\nconst NotesPage = () => {\n  const [notes, setNotes] = useState([]); // Lista de notas\n  const [showNoteForm, setShowNoteForm] = useState(false); // Formulario para añadir nota\n\n  // Cargar las notas desde localStorage cuando se monte el componente\n  useEffect(() => {\n    const savedNotes = localStorage.getItem('notes');\n    if (savedNotes) {\n      setNotes(JSON.parse(savedNotes)); // Cargar las notas al estado\n    }\n  }, []);\n\n  // Guardar las notas en localStorage solo si las notas cambian\n  useEffect(() => {\n    if (notes.length > 0) { // Solo guardamos si hay notas\n      localStorage.setItem('notes', JSON.stringify(notes));\n    }\n  }, [notes]); // Se ejecuta cada vez que 'notes' cambia\n\n  // Función para agregar una nueva nota\n  const addNote = (noteContent) => {\n    const newNote = {\n      id: Date.now(),\n      content: noteContent,\n      expanded: false, // Estará contraído por defecto\n      date: new Date().toISOString() // Agregar la fecha actual\n    };\n    setNotes([newNote, ...notes]); // Añadir la nueva nota al inicio\n    setShowNoteForm(false); // Cerrar el formulario\n  };\n\n  // Función para borrar una nota\n  const deleteNote = (id) => {\n    setNotes(notes.filter(note => note.id !== id)); // Eliminar la nota por ID\n  };\n\n  // Función para expandir o contraer una nota\n  const toggleNoteExpand = (id) => {\n    setNotes(notes.map(note =>\n      note.id === id ? { ...note, expanded: !note.expanded } : note\n    ));\n  };\n\n  const editNote = (id, newContent) => {\n    setNotes(notes.map(note =>\n      note.id === id ? { ...note, content: newContent } : note\n    ));\n  };\n  \n\n  return (\n    <div className=\"main\">\n      <Link to=\"/\">\n        <button className=\"homeButton\">\n          <span className=\"homeIcon\"><FontAwesomeIcon icon={faHouse} /></span>Inicio\n        </button>\n      </Link>\n      <div className=\"notesContainer\">\n        <h2>Notas</h2>\n        <button className=\"addNoteButton\" onClick={() => setShowNoteForm(true)}>\n          <span className=\"addNoteIcon\"><FontAwesomeIcon icon={faSquarePlus} /></span>Añadir Nota\n        </button>\n\n        {showNoteForm && <NoteForm onAdd={addNote} onClose={() => setShowNoteForm(false)} />}\n\n        <div className=\"notesList\">\n          {notes.map(note => (\n            <NoteItem\n              key={note.id}\n              note={note}\n              onDelete={deleteNote}\n              onToggleExpand={toggleNoteExpand}\n              onEdit={editNote}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}