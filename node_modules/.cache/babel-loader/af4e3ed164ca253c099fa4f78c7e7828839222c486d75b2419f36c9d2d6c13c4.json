{"ast":null,"code":"var _jsxFileName = \"/home/rosita/proyectos/nodeJS/gestortareas/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskToDo from './components/TaskListToDo';\nimport TaskDone from './components/TaskListDone';\nimport EditTaskModal from './components/EditTaskModal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const loadTasksFromLocalStorage = () => {\n    const tasksFromStorage = localStorage.getItem('tasks');\n    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];\n  };\n  const [tasks, setTasks] = useState(loadTasksFromLocalStorage());\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [editTaskText, setEditTaskText] = useState('');\n  const created = new Date(task.createdAt);\n  const completed = new Date(task.completedAt);\n  const realizationTime = completed - created; // en milisegundos\n\n  /* FUNCIONES-------------------------------------------------------------------------------------------------------------------- */\n\n  /* UseEffect para manejar estados */\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  /* Añadir tarea */\n  const addTask = text => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: new Date().toISOString(),\n      // NUEVO: Fecha de asignación\n      completedAt: null // NUEVO: Fecha de realización (se queda null hasta completarse)\n    };\n    setTasks([...tasks, newTask]);\n    setShowModal(false);\n  };\n\n  /* Toggle (cambio de ToDo a Done y viceversa) */\n  const toggleTask = id => {\n    setTasks(prevTasks => prevTasks.map(task => {\n      if (task.id === id) {\n        const completed = !task.completed;\n        return {\n          ...task,\n          completed,\n          completedAt: completed ? new Date().toISOString() : null // Asignamos o quitamos la fecha\n        };\n      }\n      return task;\n    }));\n  };\n\n  /* Borrar tarea */\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  /* Editar tarea */\n  const editTask = (id, newText) => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      text: newText\n    } : task));\n    setShowEditModal(false);\n  };\n\n  /* Abrir Modal de Editar tarea */\n  const openEditModal = (id, currentText) => {\n    setEditTaskId(id);\n    setEditTaskText(currentText);\n    setShowEditModal(true);\n  };\n\n  /* -------------------------------------------------------------------------------------------------------------------- */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestor de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"openModalButton\",\n      onClick: () => setShowModal(true),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"plusIcon\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), \" A\\xF1adir Tarea\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalOverlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          className: \"cancelButton\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A\\xF1adir Nueva Tarea:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      initialText: editTaskText,\n      onSave: newText => editTask(editTaskId, newText),\n      onCancel: () => setShowEditModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listContainer\",\n      children: [/*#__PURE__*/_jsxDEV(TaskToDo, {\n        tasks: tasks.filter(task => !task.completed),\n        onToggle: toggleTask,\n        onDelete: deleteTask,\n        onEdit: openEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskDone, {\n        tasks: tasks.filter(task => task.completed),\n        onToggle: toggleTask,\n        onDelete: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Sdqk5joaQArp4VsFuFjtOGXgHwU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskToDo","TaskDone","EditTaskModal","FontAwesomeIcon","faXmark","faPlus","jsxDEV","_jsxDEV","App","_s","loadTasksFromLocalStorage","tasksFromStorage","localStorage","getItem","JSON","parse","tasks","setTasks","showModal","setShowModal","showEditModal","setShowEditModal","editTaskId","setEditTaskId","editTaskText","setEditTaskText","created","Date","task","createdAt","completed","completedAt","realizationTime","setItem","stringify","addTask","text","newTask","id","now","toISOString","toggleTask","prevTasks","map","deleteTask","filter","editTask","newText","openEditModal","currentText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","onAdd","initialText","onSave","onCancel","onToggle","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/home/rosita/proyectos/nodeJS/gestortareas/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport TaskForm from './components/TaskForm';\nimport TaskToDo from './components/TaskListToDo';\nimport TaskDone from './components/TaskListDone';\nimport EditTaskModal from './components/EditTaskModal';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport './App.css';\n\n\nconst App = () => {\n  const loadTasksFromLocalStorage = () => {\n    const tasksFromStorage = localStorage.getItem('tasks');\n    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];\n  };\n\n  const [tasks, setTasks] = useState(loadTasksFromLocalStorage());\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [editTaskText, setEditTaskText] = useState('');\n  const created = new Date(task.createdAt);\n  const completed = new Date(task.completedAt);\n  const realizationTime = completed - created; // en milisegundos\n\n\n  /* FUNCIONES-------------------------------------------------------------------------------------------------------------------- */\n\n  /* UseEffect para manejar estados */\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n\n  /* Añadir tarea */\n  const addTask = (text) => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: new Date().toISOString(), // NUEVO: Fecha de asignación\n      completedAt: null, // NUEVO: Fecha de realización (se queda null hasta completarse)\n    };\n    setTasks([...tasks, newTask]);\n    setShowModal(false);\n  };\n\n\n  /* Toggle (cambio de ToDo a Done y viceversa) */\n  const toggleTask = (id) => {\n    setTasks(prevTasks =>\n      prevTasks.map(task => {\n        if (task.id === id) {\n          const completed = !task.completed;\n          return {\n            ...task,\n            completed,\n            completedAt: completed ? new Date().toISOString() : null, // Asignamos o quitamos la fecha\n          };\n        }\n        return task;\n      })\n    );\n  };\n\n  /* Borrar tarea */\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  /* Editar tarea */\n  const editTask = (id, newText) => {\n    setTasks(tasks.map(task =>\n      task.id === id ? { ...task, text: newText } : task\n    ));\n    setShowEditModal(false);\n  };\n\n  /* Abrir Modal de Editar tarea */\n  const openEditModal = (id, currentText) => {\n    setEditTaskId(id);\n    setEditTaskText(currentText);\n    setShowEditModal(true);\n  };\n\n  /* -------------------------------------------------------------------------------------------------------------------- */\n\n  return (\n    <div className=\"mainContainer\">\n      <h1>Gestor de Tareas</h1>\n      <button className=\"openModalButton\" onClick={() => setShowModal(true)}>\n        <span className=\"plusIcon\"><FontAwesomeIcon icon={faPlus} /></span> Añadir Tarea\n      </button>\n\n      {/* Modal para añadir tarea */}\n      {showModal && (\n        <div className=\"modalOverlay\">\n          <div className=\"modalContent\">\n            <button onClick={() => setShowModal(false)} className=\"cancelButton\"><FontAwesomeIcon icon={faXmark} />\n            </button>\n            <h2>Añadir Nueva Tarea:</h2>\n            <TaskForm onAdd={addTask} />\n          </div>\n        </div>\n      )}\n\n      {/* Modal para editar tarea */}\n      {showEditModal && (\n        <EditTaskModal\n          initialText={editTaskText}\n          onSave={(newText) => editTask(editTaskId, newText)}\n          onCancel={() => setShowEditModal(false)}\n        />\n      )}\n\n      {/* Tareas */}\n      <div className=\"listContainer\">\n        <TaskToDo\n          tasks={tasks.filter(task => !task.completed)}\n          onToggle={toggleTask}\n          onDelete={deleteTask}\n          onEdit={openEditModal}\n        />\n        <TaskDone\n          tasks={tasks.filter(task => task.completed)}\n          onToggle={toggleTask}\n          onDelete={deleteTask}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}