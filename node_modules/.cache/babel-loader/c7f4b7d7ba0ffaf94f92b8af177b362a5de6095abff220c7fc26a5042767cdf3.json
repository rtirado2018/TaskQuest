{"ast":null,"code":"var _jsxFileName = \"/home/rosita/proyectos/nodeJS/gestortareas/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskToDo from './components/TaskListToDo';\nimport TaskDone from './components/TaskListDone';\nimport EditTaskModal from './components/EditTaskModal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: \"fa-solid fa-volume-xmark\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 1\n}, this);\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const loadTasksFromLocalStorage = () => {\n    const tasksFromStorage = localStorage.getItem('tasks');\n    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];\n  };\n  const [tasks, setTasks] = useState(loadTasksFromLocalStorage());\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [editTaskText, setEditTaskText] = useState('');\n\n  /* FUNCIONES-------------------------------------------------------------------------------------------------------------------- */\n\n  /* UseEffect para manejar estados */\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  /* Añadir tarea */\n  const addTask = text => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: new Date().toISOString(),\n      // NUEVO: Fecha de asignación\n      completedAt: null // NUEVO: Fecha de realización (se queda null hasta completarse)\n    };\n    setTasks([...tasks, newTask]);\n    setShowModal(false);\n  };\n\n  /* Toggle (cambio de ToDo a Done y viceversa) */\n  const toggleTask = id => {\n    setTasks(prevTasks => prevTasks.map(task => {\n      if (task.id === id) {\n        const completed = !task.completed;\n        return {\n          ...task,\n          completed,\n          completedAt: completed ? new Date().toISOString() : null // Asignamos o quitamos la fecha\n        };\n      }\n      return task;\n    }));\n  };\n\n  /* Borrar tarea */\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  /* Editar tarea */\n  const editTask = (id, newText) => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      text: newText\n    } : task));\n    setShowEditModal(false);\n  };\n\n  /* Abrir Modal de Editar tarea */\n  const openEditModal = (id, currentText) => {\n    setEditTaskId(id);\n    setEditTaskText(currentText);\n    setShowEditModal(true);\n  };\n\n  /* -------------------------------------------------------------------------------------------------------------------- */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestor de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"openModalButton\",\n      onClick: () => setShowModal(true),\n      children: \"\\u2795 A\\xF1adir Tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalOverlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          className: \"cancelButton\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faVolumeXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A\\xF1adir Nueva Tarea:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      initialText: editTaskText,\n      onSave: newText => editTask(editTaskId, newText),\n      onCancel: () => setShowEditModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listContainer\",\n      children: [/*#__PURE__*/_jsxDEV(TaskToDo, {\n        tasks: tasks.filter(task => !task.completed),\n        onToggle: toggleTask,\n        onDelete: deleteTask,\n        onEdit: openEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskDone, {\n        tasks: tasks.filter(task => task.completed),\n        onToggle: toggleTask,\n        onDelete: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Sdqk5joaQArp4VsFuFjtOGXgHwU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskToDo","TaskDone","EditTaskModal","FontAwesomeIcon","_jsxDEV","icon","fileName","_jsxFileName","lineNumber","columnNumber","jsxDEV","App","_s","loadTasksFromLocalStorage","tasksFromStorage","localStorage","getItem","JSON","parse","tasks","setTasks","showModal","setShowModal","showEditModal","setShowEditModal","editTaskId","setEditTaskId","editTaskText","setEditTaskText","setItem","stringify","addTask","text","newTask","id","Date","now","completed","createdAt","toISOString","completedAt","toggleTask","prevTasks","map","task","deleteTask","filter","editTask","newText","openEditModal","currentText","className","children","onClick","faVolumeXmark","onAdd","initialText","onSave","onCancel","onToggle","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/home/rosita/proyectos/nodeJS/gestortareas/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskToDo from './components/TaskListToDo';\nimport TaskDone from './components/TaskListDone';\nimport EditTaskModal from './components/EditTaskModal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n<FontAwesomeIcon icon=\"fa-solid fa-volume-xmark\" />\n\nimport './App.css';\n\n\nconst App = () => {\n  const loadTasksFromLocalStorage = () => {\n    const tasksFromStorage = localStorage.getItem('tasks');\n    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];\n  };\n\n  const [tasks, setTasks] = useState(loadTasksFromLocalStorage());\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [editTaskText, setEditTaskText] = useState('');\n\n  /* FUNCIONES-------------------------------------------------------------------------------------------------------------------- */ \n\n  /* UseEffect para manejar estados */ \n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n\n  /* Añadir tarea */ \n  const addTask = (text) => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: new Date().toISOString(), // NUEVO: Fecha de asignación\n      completedAt: null, // NUEVO: Fecha de realización (se queda null hasta completarse)\n    };\n    setTasks([...tasks, newTask]);\n    setShowModal(false);\n  };\n\n\n  /* Toggle (cambio de ToDo a Done y viceversa) */ \n  const toggleTask = (id) => {\n    setTasks(prevTasks =>\n      prevTasks.map(task => {\n        if (task.id === id) {\n          const completed = !task.completed;\n          return {\n            ...task,\n            completed,\n            completedAt: completed ? new Date().toISOString() : null, // Asignamos o quitamos la fecha\n          };\n        }\n        return task;\n      })\n    );\n  };\n\n  /* Borrar tarea */ \n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  /* Editar tarea */ \n  const editTask = (id, newText) => {\n    setTasks(tasks.map(task =>\n      task.id === id ? { ...task, text: newText } : task\n    ));\n    setShowEditModal(false);\n  };\n\n  /* Abrir Modal de Editar tarea */ \n  const openEditModal = (id, currentText) => {\n    setEditTaskId(id);\n    setEditTaskText(currentText);\n    setShowEditModal(true);\n  };\n\n  /* -------------------------------------------------------------------------------------------------------------------- */ \n\n  return (\n    <div className=\"mainContainer\">\n      <h1>Gestor de Tareas</h1>\n      <button className=\"openModalButton\" onClick={() => setShowModal(true)}>\n        ➕ Añadir Tarea\n      </button>\n\n      {/* Modal para añadir tarea */}\n      {showModal && (\n        <div className=\"modalOverlay\">\n          <div className=\"modalContent\">\n            <button onClick={() => setShowModal(false)} className=\"cancelButton\"><FontAwesomeIcon icon={faVolumeXmark} /></button>\n            <h2>Añadir Nueva Tarea:</h2>\n            <TaskForm onAdd={addTask} />\n          </div>\n        </div>\n      )}\n\n      {/* Modal para editar tarea */}\n      {showEditModal && (\n        <EditTaskModal\n          initialText={editTaskText}\n          onSave={(newText) => editTask(editTaskId, newText)}\n          onCancel={() => setShowEditModal(false)}\n        />\n      )}\n\n      {/* Tareas */}\n      <div className=\"listContainer\">\n        <TaskToDo\n          tasks={tasks.filter(task => !task.completed)}\n          onToggle={toggleTask}\n          onDelete={deleteTask}\n          onEdit={openEditModal}\n        />\n        <TaskDone\n          tasks={tasks.filter(task => task.completed)}\n          onToggle={toggleTask}\n          onDelete={deleteTask}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}