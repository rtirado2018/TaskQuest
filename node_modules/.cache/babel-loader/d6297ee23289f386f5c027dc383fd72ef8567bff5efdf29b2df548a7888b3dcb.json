{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Router,Routes,Route,Link,useLocation}from'react-router-dom';import{DragDropContext}from'@hello-pangea/dnd';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faXmark,faPlus,faFileLines}from'@fortawesome/free-solid-svg-icons';import TaskForm from'./components/TaskForm';import EditTaskModal from'./components/EditTaskModal';import NotesPage from'./components/NotesPage';import HomePage from'./components/HomePage';import logoFull from'./img/logoFull.png';import'./App.css';//-----------------------------------------------------------------------------------------------------------\n//Botones Notas y Agregar\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AccessButtons=_ref=>{let{setShowModal}=_ref;const location=useLocation();if(location.pathname!==\"/\")return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/notas\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"openModalButton\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"plusIcon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faFileLines})}),\" Notas\"]})}),/*#__PURE__*/_jsxs(\"button\",{className:\"openModalButton\",onClick:()=>setShowModal(true),children:[/*#__PURE__*/_jsx(\"span\",{className:\"noteIcon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus})}),\" A\\xF1adir Tarea\"]})]});};//La App\nconst App=()=>{//Cargar tareas con localStorage\nconst loadTasksFromLocalStorage=()=>{try{const tasksFromStorage=localStorage.getItem('tasks');return tasksFromStorage?JSON.parse(tasksFromStorage):[];}catch(error){console.error('Error al cargar las tareas desde localStorage:',error);return[];// En caso de error, devolver un array vacío\n}};const[tasks,setTasks]=useState(loadTasksFromLocalStorage());const[showModal,setShowModal]=useState(false);const[showEditModal,setShowEditModal]=useState(false);const[editTaskId,setEditTaskId]=useState(null);const[editTaskText,setEditTaskText]=useState('');useEffect(()=>{localStorage.setItem('tasks',JSON.stringify(tasks));},[tasks]);//Añadir tarea\nconst addTask=text=>{const newTask={id:Date.now(),text,completed:false,createdAt:new Date().toISOString(),completedAt:null,realizationTime:null};// Usamos la versión de función de setTasks para garantizar que trabajemos con el estado más reciente\nsetTasks(prevTasks=>[newTask,...prevTasks]);setShowModal(false);};/* Editar tarea */const editTask=(id,newText)=>{setTasks(tasks.map(task=>task.id===id?{...task,text:newText}:task));setShowEditModal(false);};/* Abrir Modal de Editar tarea */const openEditModal=(id,currentText)=>{setEditTaskId(id);setEditTaskText(currentText);setShowEditModal(true);};const toggleTask=id=>{setTasks(prevTasks=>prevTasks.map(task=>{if(task.id===id){const completed=!task.completed;const now=new Date().toISOString();return{...task,completed,completedAt:completed?now:null,realizationTime:completed?new Date(now)-new Date(task.createdAt):null};}return task;}));};const deleteTask=id=>{setTasks(tasks.filter(task=>task.id!==id));};// Agregamos la definición de handleDragEnd\nconst handleDragEnd=result=>{const{source,destination}=result;if(!destination)return;if(source.index===destination.index)return;const activeTasks=tasks.filter(task=>!task.completed);const completedTasks=tasks.filter(task=>task.completed);// Mover sólo dentro de tareas incompletas\nconst newActiveTasks=Array.from(activeTasks);const[movedTask]=newActiveTasks.splice(source.index,1);newActiveTasks.splice(destination.index,0,movedTask);// Ahora juntamos las listas: tareas incompletas primero, luego completadas\nconst newTasks=[...newActiveTasks,...completedTasks];setTasks(newTasks);};//---------------------------------------------------------------------------------------\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"mainContainer\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"img\",{className:\"logo\",src:logoFull,alt:\"Logo TaskQuest\"})}),/*#__PURE__*/_jsx(AccessButtons,{setShowModal:setShowModal}),showModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modalOverlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modalContent\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowModal(false),className:\"cancelButton\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faXmark})}),/*#__PURE__*/_jsx(\"h2\",{children:\"A\\xF1adir Nueva Tarea:\"}),/*#__PURE__*/_jsx(TaskForm,{onAdd:addTask})]})}),showEditModal&&/*#__PURE__*/_jsx(EditTaskModal,{taskId:editTaskId,currentText:editTaskText,initialText:editTaskText,onSave:newText=>editTask(editTaskId,newText),setShowEditModal:setShowEditModal,onCancel:()=>setShowEditModal(false)}),/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:handleDragEnd,children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/notas\",element:/*#__PURE__*/_jsx(NotesPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{tasks:tasks,onToggle:toggleTask,onDelete:deleteTask,openEditModal:openEditModal})})]})})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Router","Routes","Route","Link","useLocation","DragDropContext","FontAwesomeIcon","faXmark","faPlus","faFileLines","TaskForm","EditTaskModal","NotesPage","HomePage","logoFull","jsx","_jsx","jsxs","_jsxs","AccessButtons","_ref","setShowModal","location","pathname","className","children","to","icon","onClick","App","loadTasksFromLocalStorage","tasksFromStorage","localStorage","getItem","JSON","parse","error","console","tasks","setTasks","showModal","showEditModal","setShowEditModal","editTaskId","setEditTaskId","editTaskText","setEditTaskText","setItem","stringify","addTask","text","newTask","id","Date","now","completed","createdAt","toISOString","completedAt","realizationTime","prevTasks","editTask","newText","map","task","openEditModal","currentText","toggleTask","deleteTask","filter","handleDragEnd","result","source","destination","index","activeTasks","completedTasks","newActiveTasks","Array","from","movedTask","splice","newTasks","src","alt","onAdd","taskId","initialText","onSave","onCancel","onDragEnd","path","element","onToggle","onDelete"],"sources":["/home/rosita/proyectos/nodeJS/gestortareas/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Router, Routes, Route, Link, useLocation } from 'react-router-dom';\nimport { DragDropContext } from '@hello-pangea/dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faPlus, faFileLines } from '@fortawesome/free-solid-svg-icons';\n\nimport TaskForm from './components/TaskForm';\nimport EditTaskModal from './components/EditTaskModal';\nimport NotesPage from './components/NotesPage';\nimport HomePage from './components/HomePage';\n\nimport logoFull from './img/logoFull.png';\nimport './App.css';\n//-----------------------------------------------------------------------------------------------------------\n//Botones Notas y Agregar\nconst AccessButtons = ({ setShowModal }) => {\n  const location = useLocation();\n  if (location.pathname !== \"/\") return null;\n\n  return (\n    <div className=\"button-container\">\n\n      <Link to=\"/notas\">\n        <button className=\"openModalButton\">\n          <span className=\"plusIcon\"><FontAwesomeIcon icon={faFileLines} /></span> Notas\n        </button>\n      </Link>\n      <button className=\"openModalButton\" onClick={() => setShowModal(true)}>\n        <span className=\"noteIcon\"><FontAwesomeIcon icon={faPlus} /></span> Añadir Tarea\n      </button>\n    </div>\n  );\n};\n\n//La App\n\nconst App = () => {\n  //Cargar tareas con localStorage\n  const loadTasksFromLocalStorage = () => {\n    try {\n      const tasksFromStorage = localStorage.getItem('tasks');\n      return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];\n    } catch (error) {\n      console.error('Error al cargar las tareas desde localStorage:', error);\n      return []; // En caso de error, devolver un array vacío\n    }\n  };\n  \n\n\n  const [tasks, setTasks] = useState(loadTasksFromLocalStorage());\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [editTaskText, setEditTaskText] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  //Añadir tarea\n  const addTask = (text) => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: new Date().toISOString(),\n      completedAt: null,\n      realizationTime: null,\n    };\n    \n    // Usamos la versión de función de setTasks para garantizar que trabajemos con el estado más reciente\n    setTasks((prevTasks) => [newTask, ...prevTasks]);\n\n    setShowModal(false);\n  };\n  /* Editar tarea */\n  const editTask = (id, newText) => {\n    setTasks(tasks.map(task =>\n      task.id === id ? { ...task, text: newText } : task\n    ));\n    setShowEditModal(false);\n  };\n\n  /* Abrir Modal de Editar tarea */\n  const openEditModal = (id, currentText) => {\n    setEditTaskId(id);\n    setEditTaskText(currentText);\n    setShowEditModal(true);\n  };\n\n\n  const toggleTask = (id) => {\n    setTasks(prevTasks =>\n      prevTasks.map(task => {\n        if (task.id === id) {\n          const completed = !task.completed;\n          const now = new Date().toISOString();\n          return {\n            ...task,\n            completed,\n            completedAt: completed ? now : null,\n            realizationTime: completed\n              ? new Date(now) - new Date(task.createdAt)\n              : null,\n          };\n        }\n        return task;\n      })\n    );\n  };\n\n\n\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  // Agregamos la definición de handleDragEnd\n  const handleDragEnd = (result) => {\n    const { source, destination } = result;\n  \n    if (!destination) return;\n    if (source.index === destination.index) return;\n  \n    const activeTasks = tasks.filter(task => !task.completed);\n    const completedTasks = tasks.filter(task => task.completed);\n  \n    // Mover sólo dentro de tareas incompletas\n    const newActiveTasks = Array.from(activeTasks);\n    const [movedTask] = newActiveTasks.splice(source.index, 1);\n    newActiveTasks.splice(destination.index, 0, movedTask);\n  \n    // Ahora juntamos las listas: tareas incompletas primero, luego completadas\n    const newTasks = [...newActiveTasks, ...completedTasks];\n  \n    setTasks(newTasks);\n  };\n  \n//---------------------------------------------------------------------------------------\nreturn (\n  <div className=\"mainContainer\">\n    <header>\n      <img className=\"logo\" src={logoFull} alt=\"Logo TaskQuest\" />\n    </header>\n\n    <AccessButtons setShowModal={setShowModal} />\n\n    {showModal && (\n      <div className=\"modalOverlay\">\n        <div className=\"modalContent\">\n          <button onClick={() => setShowModal(false)} className=\"cancelButton\">\n            <FontAwesomeIcon icon={faXmark} />\n          </button>\n          <h2>Añadir Nueva Tarea:</h2>\n          <TaskForm onAdd={addTask} />\n        </div>\n      </div>\n    )}\n\n    {showEditModal && (\n      <EditTaskModal\n        taskId={editTaskId}\n        currentText={editTaskText}\n        initialText={editTaskText}\n        onSave={(newText) => editTask(editTaskId, newText)}\n        setShowEditModal={setShowEditModal}\n        onCancel={() => setShowEditModal(false)}\n      />\n    )}\n\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Routes>\n        <Route path=\"/notas\" element={<NotesPage />} />\n        <Route path=\"/\" element={\n          <HomePage\n            tasks={tasks}\n            onToggle={toggleTask}\n            onDelete={deleteTask}\n            openEditModal={openEditModal}\n          />\n        } />\n      </Routes>\n    </DragDropContext>\n  </div>\n);\n\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}