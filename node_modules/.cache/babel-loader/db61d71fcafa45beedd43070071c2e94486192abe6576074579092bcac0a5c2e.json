{"ast":null,"code":"var _jsxFileName = \"/home/rosita/proyectos/nodeJS/gestortareas/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskToDo from './components/TaskListToDo';\nimport TaskDone from './components/TaskListDone';\nimport EditTaskModal from './components/EditTaskModal';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const loadTasksFromLocalStorage = () => {\n    const tasksFromStorage = localStorage.getItem('tasks');\n    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];\n  };\n  const [tasks, setTasks] = useState(loadTasksFromLocalStorage());\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [editTaskText, setEditTaskText] = useState('');\n\n  /* FUNCIONES-------------------------------------------------------------------------------------------------------------------- */\n\n  /* UseEffect para manejar estados */\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  /* Añadir tarea */\n  const addTask = text => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: new Date().toISOString(),\n      // NUEVO: Fecha de asignación\n      completedAt: null,\n      //Fecha de realización (se queda null hasta completarse)\n      realizationTime: null\n    };\n    setTasks([...tasks, newTask]);\n    setShowModal(false);\n  };\n\n  /* Toggle (cambio de ToDo a Done y viceversa) */\n  const toggleTask = id => {\n    setTasks(prevTasks => prevTasks.map(task => {\n      if (task.id === id) {\n        const completed = !task.completed;\n        const now = new Date().toISOString();\n        return {\n          ...task,\n          completed,\n          completedAt: completed ? now : null,\n          realizationTime: completed ? new Date(now) - new Date(task.createdAt) : null\n        };\n      }\n      return task;\n    }));\n  };\n\n  /* Borrar tarea */\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  /* Editar tarea */\n  const editTask = (id, newText) => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      text: newText\n    } : task));\n    setShowEditModal(false);\n  };\n\n  /* Abrir Modal de Editar tarea */\n  const openEditModal = (id, currentText) => {\n    setEditTaskId(id);\n    setEditTaskText(currentText);\n    setShowEditModal(true);\n  };\n\n  /* -------------------------------------------------------------------------------------------------------------------- */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestor de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"openModalButton\",\n      onClick: () => setShowModal(true),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"plusIcon\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), \" A\\xF1adir Tarea\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalOverlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          className: \"cancelButton\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A\\xF1adir Nueva Tarea:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      initialText: editTaskText,\n      onSave: newText => editTask(editTaskId, newText),\n      onCancel: () => setShowEditModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listContainer\",\n      children: [/*#__PURE__*/_jsxDEV(TaskToDo, {\n        tasks: tasks.filter(task => !task.completed),\n        onToggle: toggleTask,\n        onDelete: deleteTask,\n        onEdit: openEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskDone, {\n        tasks: tasks.filter(task => task.completed),\n        onToggle: toggleTask,\n        onDelete: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Sdqk5joaQArp4VsFuFjtOGXgHwU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskToDo","TaskDone","EditTaskModal","DragDropContext","Droppable","Draggable","FontAwesomeIcon","faXmark","faPlus","jsxDEV","_jsxDEV","App","_s","loadTasksFromLocalStorage","tasksFromStorage","localStorage","getItem","JSON","parse","tasks","setTasks","showModal","setShowModal","showEditModal","setShowEditModal","editTaskId","setEditTaskId","editTaskText","setEditTaskText","setItem","stringify","addTask","text","newTask","id","Date","now","completed","createdAt","toISOString","completedAt","realizationTime","toggleTask","prevTasks","map","task","deleteTask","filter","editTask","newText","openEditModal","currentText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","onAdd","initialText","onSave","onCancel","onToggle","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/home/rosita/proyectos/nodeJS/gestortareas/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport TaskForm from './components/TaskForm';\nimport TaskToDo from './components/TaskListToDo';\nimport TaskDone from './components/TaskListDone';\nimport EditTaskModal from './components/EditTaskModal';\n\nimport {DragDropContext,Droppable,Draggable}from '@hello-pangea/dnd';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport './App.css';\n\n\nconst App = () => {\n  const loadTasksFromLocalStorage = () => {\n    const tasksFromStorage = localStorage.getItem('tasks');\n    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];\n  };\n\n  const [tasks, setTasks] = useState(loadTasksFromLocalStorage());\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [editTaskText, setEditTaskText] = useState('');\n\n\n  /* FUNCIONES-------------------------------------------------------------------------------------------------------------------- */\n\n  /* UseEffect para manejar estados */\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n\n  /* Añadir tarea */\n  const addTask = (text) => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: new Date().toISOString(), // NUEVO: Fecha de asignación\n      completedAt: null, //Fecha de realización (se queda null hasta completarse)\n      realizationTime: null,\n    };\n    setTasks([...tasks, newTask]);\n    setShowModal(false);\n  };\n\n\n  /* Toggle (cambio de ToDo a Done y viceversa) */\n  const toggleTask = (id) => {\n    setTasks(prevTasks =>\n      prevTasks.map(task => {\n        if (task.id === id) {\n          const completed = !task.completed;\n          const now = new Date().toISOString();\n          return {\n            ...task,\n            completed,\n            completedAt: completed ? now : null,\n            realizationTime: completed\n              ? new Date(now) - new Date(task.createdAt)\n              : null,\n          };\n        }\n        return task;\n      })\n    );\n  };\n\n  /* Borrar tarea */\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  /* Editar tarea */\n  const editTask = (id, newText) => {\n    setTasks(tasks.map(task =>\n      task.id === id ? { ...task, text: newText } : task\n    ));\n    setShowEditModal(false);\n  };\n\n  /* Abrir Modal de Editar tarea */\n  const openEditModal = (id, currentText) => {\n    setEditTaskId(id);\n    setEditTaskText(currentText);\n    setShowEditModal(true);\n  };\n\n  \n\n  /* -------------------------------------------------------------------------------------------------------------------- */\n\n  return (\n    <div className=\"mainContainer\">\n      <h1>Gestor de Tareas</h1>\n      <button className=\"openModalButton\" onClick={() => setShowModal(true)}>\n        <span className=\"plusIcon\"><FontAwesomeIcon icon={faPlus} /></span> Añadir Tarea\n      </button>\n\n      {/* Modal para añadir tarea */}\n      {showModal && (\n        <div className=\"modalOverlay\">\n          <div className=\"modalContent\">\n            <button onClick={() => setShowModal(false)} className=\"cancelButton\"><FontAwesomeIcon icon={faXmark} />\n            </button>\n            <h2>Añadir Nueva Tarea:</h2>\n            <TaskForm onAdd={addTask} />\n          </div>\n        </div>\n      )}\n\n      {/* Modal para editar tarea */}\n      {showEditModal && (\n        <EditTaskModal\n          initialText={editTaskText}\n          onSave={(newText) => editTask(editTaskId, newText)}\n          onCancel={() => setShowEditModal(false)}\n        />\n      )}\n\n      {/* Tareas */}\n      <div className=\"listContainer\">\n        <TaskToDo\n          tasks={tasks.filter(task => !task.completed)}\n          onToggle={toggleTask}\n          onDelete={deleteTask}\n          onEdit={openEditModal}\n        />\n        <TaskDone\n          tasks={tasks.filter(task => task.completed)}\n          onToggle={toggleTask}\n          onDelete={deleteTask}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}