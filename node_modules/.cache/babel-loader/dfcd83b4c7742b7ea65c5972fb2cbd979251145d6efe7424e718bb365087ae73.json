{"ast":null,"code":"import React,{useState,useEffect}from'react';import TaskItem from'./TaskItem';import'./ListStyle.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const TaskDone=_ref=>{let{tasks,onToggle,onDelete}=_ref;const[isMobile,setIsMobile]=useState(false);const[isExpanded,setIsExpanded]=useState(true);useEffect(()=>{const checkIfMobile=()=>setIsMobile(window.innerWidth<768);checkIfMobile();window.addEventListener('resize',checkIfMobile);return()=>window.removeEventListener('resize',checkIfMobile);},[]);const toggleExpansion=()=>{if(isMobile)setIsExpanded(!isExpanded);};const completedTasks=tasks.filter(task=>task.completed);return/*#__PURE__*/_jsxs(\"div\",{className:\"list\",children:[/*#__PURE__*/_jsxs(\"h3\",{onClick:toggleExpansion,children:[\"Tareas realizadas: \",isMobile?isExpanded?'↓':'↑':null]}),(!isMobile||isExpanded)&&/*#__PURE__*/_jsx(\"ul\",{className:\"listaTareas done\",children:completedTasks.map(task=>/*#__PURE__*/_jsx(TaskItem,{task:task,onToggle:onToggle,onDelete:onDelete,editable:false},task.id))})]});};export default TaskDone;","map":{"version":3,"names":["React","useState","useEffect","TaskItem","jsxs","_jsxs","jsx","_jsx","TaskDone","_ref","tasks","onToggle","onDelete","isMobile","setIsMobile","isExpanded","setIsExpanded","checkIfMobile","window","innerWidth","addEventListener","removeEventListener","toggleExpansion","completedTasks","filter","task","completed","className","children","onClick","map","editable","id"],"sources":["/home/rosita/proyectos/nodeJS/gestortareas/src/components/TaskListDone.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskItem from './TaskItem';\nimport './ListStyle.css';\n\nconst TaskDone = ({ tasks, onToggle, onDelete }) => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  useEffect(() => {\n    const checkIfMobile = () => setIsMobile(window.innerWidth < 768);\n    checkIfMobile();\n    window.addEventListener('resize', checkIfMobile);\n    return () => window.removeEventListener('resize', checkIfMobile);\n  }, []);\n\n  const toggleExpansion = () => {\n    if (isMobile) setIsExpanded(!isExpanded);\n  };\n\n  const completedTasks = tasks.filter(task => task.completed);\n\n  return (\n    <div className=\"list\">\n      <h3 onClick={toggleExpansion}>\n        Tareas realizadas: {isMobile ? (isExpanded ? '↓' : '↑') : null}\n      </h3>\n      {(!isMobile || isExpanded) && (\n        <ul className=\"listaTareas done\">\n          {completedTasks.map((task) => (\n            <TaskItem\n              key={task.id}\n              task={task}\n              onToggle={onToggle}\n              onDelete={onDelete}\n              editable={false}\n            />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default TaskDone;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,iBAAiB,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEzB,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAmC,IAAlC,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAC7C,KAAM,CAACI,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACc,UAAU,CAAEC,aAAa,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAElDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,aAAa,CAAGA,CAAA,GAAMH,WAAW,CAACI,MAAM,CAACC,UAAU,CAAG,GAAG,CAAC,CAChEF,aAAa,CAAC,CAAC,CACfC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEH,aAAa,CAAC,CAChD,MAAO,IAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEJ,aAAa,CAAC,CAClE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAIT,QAAQ,CAAEG,aAAa,CAAC,CAACD,UAAU,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAQ,cAAc,CAAGb,KAAK,CAACc,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,SAAS,CAAC,CAE3D,mBACErB,KAAA,QAAKsB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBvB,KAAA,OAAIwB,OAAO,CAAEP,eAAgB,CAAAM,QAAA,EAAC,qBACT,CAACf,QAAQ,CAAIE,UAAU,CAAG,GAAG,CAAG,GAAG,CAAI,IAAI,EAC5D,CAAC,CACJ,CAAC,CAACF,QAAQ,EAAIE,UAAU,gBACvBR,IAAA,OAAIoB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC7BL,cAAc,CAACO,GAAG,CAAEL,IAAI,eACvBlB,IAAA,CAACJ,QAAQ,EAEPsB,IAAI,CAAEA,IAAK,CACXd,QAAQ,CAAEA,QAAS,CACnBC,QAAQ,CAAEA,QAAS,CACnBmB,QAAQ,CAAE,KAAM,EAJXN,IAAI,CAACO,EAKX,CACF,CAAC,CACA,CACL,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}